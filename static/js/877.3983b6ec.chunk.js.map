{"version":3,"file":"static/js/877.3983b6ec.chunk.js","mappings":"+PAIMA,EAAa,IAAIC,EAAAA,EAuCvB,EArCa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAFS,wCASjB,6GAE2BL,EAAWO,aAAaF,GAFnD,OAEUG,EAFV,OAGIJ,EAAaI,EAASC,MAH1B,gDAKIC,QAAQC,IAAR,MALJ,0DATiB,sBAkBjB,OAdAC,EAAAA,EAAAA,YAAU,YAJO,mCAKfL,EAED,GAAE,CAACF,KAYF,wBACGF,EAAUU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACb,2BACE,gBACEC,IACEH,GAAY,0CACuBA,GAErCI,IAAKH,KAEP,wBAAKA,KACL,uCAAeC,OATjB,aAAeH,GADF,KAepB,C,gHCvCoBb,EAAAA,WACnB,cAAe,eACbmB,KAAKC,IAAM,mCACXD,KAAKE,QAAU,+BAChB,CAkCD,OAlCC,oEAED,oGACyBC,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,oCACsBF,KAAKC,MAFpD,cACQb,EADR,yBAKSA,EAASgB,KAAKC,SALvB,kGAFC,IAED,mEAQA,WAAyBC,EAAOC,GAAhC,uFACyBJ,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,gCACkBF,KAAKC,IADvB,kBACoCK,EADpC,iBACkDC,IAF3E,cACQnB,EADR,yBAKSA,EAASgB,KAAKC,SALvB,qGARA,IAQA,gEAQA,WAAsBX,GAAtB,uFACyBS,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGR,EADH,oBACiBM,KAAKC,MAF/C,cACQb,EADR,yBAKSA,EAASgB,MALlB,mGARA,IAQA,6DAQA,WAAmBV,GAAnB,uFACyBS,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGR,EADH,4BACyBM,KAAKC,MAFvD,cACQb,EADR,yBAKSA,EAASgB,MALlB,mGARA,IAQA,gEAQA,WAAsBV,GAAtB,uFACyBS,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGR,EADH,4BACyBM,KAAKC,MAFvD,cACQb,EADR,yBAKSA,EAASgB,MALlB,mGARA,MAQA,EAtCmBvB,E","sources":["components/Cast/Cast.jsx","services/api-service.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport APIService from 'services/api-service';\n\nconst apiService = new APIService();\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast();\n    // eslint-disable-next-line\n  }, [movieId]);\n\n  async function getMovieCast() {\n    try {\n      const response = await apiService.getMovieCast(movieId);\n      setMovieCast(response.cast);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <ul>\n      {movieCast.map(({id, profile_path, name, character}) => (\n        <li key={`act${id}`}>\n          <img\n            src={\n              profile_path &&\n              `https://image.tmdb.org/t/p/w200/${profile_path}`\n            }\n            alt={name}\n          />\n          <h5>{name}</h5>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport default class APIService {\n  constructor() {\n    this.key = 'f174cbacdc3a2b94891babbfd6b17080';\n    this.baseURL = 'https://api.themoviedb.org/3/';\n  }\n\n  async getTrends() {\n    const response = await axios.get(\n      `${this.baseURL}trending/all/day?api_key=${this.key}`\n    );\n\n    return response.data.results;\n  }\n\n  async searchMovieByQuery(query, page) {\n    const response = await axios.get(\n      `${this.baseURL}search/movie?api_key=${this.key}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  }\n\n  async getMovieDetails(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieCast(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/credits?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieReviews(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/reviews?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n}\n"],"names":["apiService","APIService","useState","movieCast","setMovieCast","movieId","useParams","getMovieCast","response","cast","console","log","useEffect","map","id","profile_path","name","character","src","alt","this","key","baseURL","axios","data","results","query","page"],"sourceRoot":""}
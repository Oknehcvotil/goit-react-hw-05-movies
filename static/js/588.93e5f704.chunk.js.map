{"version":3,"file":"static/js/588.93e5f704.chunk.js","mappings":"uQAUMA,EAAa,IAAIC,EAAAA,EA8DvB,EA5DqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,UAC3D,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAJiB,wCAWzB,6GAE2BX,EAAWa,gBAAgBF,GAFtD,OAEUG,EAFV,OAGIC,QAAQC,IAAIF,GACZJ,EAASI,GAJb,gDAMIC,QAAQC,IAAR,MANJ,0DAXyB,uBAMzBC,EAAAA,EAAAA,YAAU,YANe,mCAOvBC,EAED,GAAE,CAACP,IAYJ,IAAQQ,EAA6DV,EAA7DU,aAAcC,EAA+CX,EAA/CW,OAAQC,EAAuCZ,EAAvCY,YAAaC,EAA0Bb,EAA1Ba,MAAOC,EAAmBd,EAAnBc,KAAMC,EAAaf,EAAbe,SAElDC,EAAiBC,KAAKC,MAAOR,EAAe,GAAM,KAElDS,EAAcR,GAAUA,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMP,IAAV,IAAgBQ,KAAK,MAE7DC,EACJX,GAAW,0CAAuCA,GAEpD,OACE,iCACE,SAAC,KAAD,CAAMY,GAAI7B,EAAoB8B,QAA9B,qBACCzB,IACC,4BACE,gBAAK0B,IAAKH,EAAQI,IAAKd,GAASC,KAChC,wBAAKD,GAASC,KACd,wCAAgBE,EAAhB,QACA,4BACE,sCACA,uBAAID,QAEN,4BACE,oCACA,uBAAII,WAIV,4BACE,oDACA,SAAC,KAAD,CAASK,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,yBAEF,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,gHCpEoBrC,EAAAA,WACnB,cAAe,eACbsC,KAAKC,IAAM,mCACXD,KAAKE,QAAU,+BAChB,CAkCD,OAlCC,oEAED,oGACyBC,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,oCACsBF,KAAKC,MAFpD,cACQ1B,EADR,yBAKSA,EAAS6B,KAAKC,SALvB,kGAFC,IAED,mEAQA,WAAyBC,EAAOC,GAAhC,uFACyBJ,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,gCACkBF,KAAKC,IADvB,kBACoCK,EADpC,iBACkDC,IAF3E,cACQhC,EADR,yBAKSA,EAAS6B,KAAKC,SALvB,qGARA,IAQA,gEAQA,WAAsBG,GAAtB,uFACyBL,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGM,EADH,oBACiBR,KAAKC,MAF/C,cACQ1B,EADR,yBAKSA,EAAS6B,MALlB,mGARA,IAQA,6DAQA,WAAmBI,GAAnB,uFACyBL,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGM,EADH,4BACyBR,KAAKC,MAFvD,cACQ1B,EADR,yBAKSA,EAAS6B,MALlB,mGARA,IAQA,gEAQA,WAAsBI,GAAtB,uFACyBL,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGM,EADH,4BACyBR,KAAKC,MAFvD,cACQ1B,EADR,yBAKSA,EAAS6B,MALlB,mGARA,MAQA,EAtCmB1C,E","sources":["pages/MovieDetails/MovieDetails.jsx","services/api-service.js"],"sourcesContent":["import { useEffect, useRef, useState, Suspense } from 'react';\nimport {\n  Outlet,\n  useParams,\n  NavLink,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport APIService from 'services/api-service';\n\nconst apiService = new APIService();\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? 'movies');\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovie();\n    // eslint-disable-next-line\n  }, [movieId]);\n\n  async function getMovie() {\n    try {\n      const response = await apiService.getMovieDetails(movieId);\n      console.log(response);\n      setMovie(response);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const { vote_average, genres, poster_path, title, name, overview } = movie;\n\n  const persentageRate = Math.round((vote_average / 10) * 100);\n\n  const movieGenres = genres && genres.map(genre => genre.name).join(', ');\n\n  const imagen =\n    poster_path && `https://image.tmdb.org/t/p/w200/${poster_path}`;\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      {movie && (\n        <div>\n          <img src={imagen} alt={title || name} />\n          <h2>{title || name}</h2>\n          <p>User Score: {persentageRate}%</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </div>\n          <div>\n            <h4>Genres</h4>\n            <p>{movieGenres}</p>\n          </div>\n        </div>\n      )}\n      <div>\n        <h3>Additional Information</h3>\n        <NavLink to=\"cast\">Cast</NavLink>\n        <NavLink to=\"reviews\">Reviews</NavLink>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport default class APIService {\n  constructor() {\n    this.key = 'f174cbacdc3a2b94891babbfd6b17080';\n    this.baseURL = 'https://api.themoviedb.org/3/';\n  }\n\n  async getTrends() {\n    const response = await axios.get(\n      `${this.baseURL}trending/all/day?api_key=${this.key}`\n    );\n\n    return response.data.results;\n  }\n\n  async searchMovieByQuery(query, page) {\n    const response = await axios.get(\n      `${this.baseURL}search/movie?api_key=${this.key}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  }\n\n  async getMovieDetails(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieCast(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/credits?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieReviews(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/reviews?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n}\n"],"names":["apiService","APIService","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movie","setMovie","movieId","useParams","getMovieDetails","response","console","log","useEffect","getMovie","vote_average","genres","poster_path","title","name","overview","persentageRate","Math","round","movieGenres","map","genre","join","imagen","to","current","src","alt","Suspense","fallback","this","key","baseURL","axios","data","results","query","page","id"],"sourceRoot":""}
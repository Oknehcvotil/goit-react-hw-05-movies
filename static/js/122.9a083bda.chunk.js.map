{"version":3,"file":"static/js/122.9a083bda.chunk.js","mappings":"+PAIMA,EAAa,IAAIC,EAAAA,EAiCvB,EA/BgB,WACd,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAFY,wCASpB,6GAE2BL,EAAWO,gBAAgBF,GAFtD,OAEUG,EAFV,OAGIC,QAAQC,IAAIF,EAASG,SACrBP,EAAgBI,EAASG,SAJ7B,gDAMIF,QAAQC,IAAR,MANJ,0DAToB,sBAmBpB,OAfAE,EAAAA,EAAAA,YAAU,YAJU,mCAKlBL,EAED,GAAE,CAACF,KAaF,wBACGF,EAAaU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OAChB,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADO,KAQvB,C,gHCjCoBb,EAAAA,WACnB,cAAe,eACbgB,KAAKC,IAAM,mCACXD,KAAKE,QAAU,+BAChB,CAkCD,OAlCC,oEAED,oGACyBC,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,oCACsBF,KAAKC,MAFpD,cACQV,EADR,yBAKSA,EAASa,KAAKV,SALvB,kGAFC,IAED,mEAQA,WAAyBW,EAAOC,GAAhC,uFACyBH,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,gCACkBF,KAAKC,IADvB,kBACoCI,EADpC,iBACkDC,IAF3E,cACQf,EADR,yBAKSA,EAASa,KAAKV,SALvB,qGARA,IAQA,gEAQA,WAAsBG,GAAtB,uFACyBM,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGL,EADH,oBACiBG,KAAKC,MAF/C,cACQV,EADR,yBAKSA,EAASa,MALlB,mGARA,IAQA,6DAQA,WAAmBP,GAAnB,uFACyBM,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGL,EADH,4BACyBG,KAAKC,MAFvD,cACQV,EADR,yBAKSA,EAASa,MALlB,mGARA,IAQA,gEAQA,WAAsBP,GAAtB,uFACyBM,EAAAA,EAAAA,IAAA,UAClBH,KAAKE,QADa,iBACGL,EADH,4BACyBG,KAAKC,MAFvD,cACQV,EADR,yBAKSA,EAASa,MALlB,mGARA,MAQA,EAtCmBpB,E","sources":["components/Reviews/Reviews.jsx","services/api-service.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport APIService from 'services/api-service';\n\nconst apiService = new APIService();\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews();\n    // eslint-disable-next-line\n  }, [movieId]);\n\n  async function getMovieReviews() {\n    try {\n      const response = await apiService.getMovieReviews(movieId);\n      console.log(response.results);\n      setMovieReviews(response.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <ul>\n      {movieReviews.map(({id, author, content})=> (\n        <li key={id}>\n          <h5>Author: {author}</h5>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport default class APIService {\n  constructor() {\n    this.key = 'f174cbacdc3a2b94891babbfd6b17080';\n    this.baseURL = 'https://api.themoviedb.org/3/';\n  }\n\n  async getTrends() {\n    const response = await axios.get(\n      `${this.baseURL}trending/all/day?api_key=${this.key}`\n    );\n\n    return response.data.results;\n  }\n\n  async searchMovieByQuery(query, page) {\n    const response = await axios.get(\n      `${this.baseURL}search/movie?api_key=${this.key}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  }\n\n  async getMovieDetails(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieCast(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/credits?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieReviews(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/reviews?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n}\n"],"names":["apiService","APIService","useState","movieReviews","setMovieReviews","movieId","useParams","getMovieReviews","response","console","log","results","useEffect","map","id","author","content","this","key","baseURL","axios","data","query","page"],"sourceRoot":""}
{"version":3,"file":"static/js/447.e30e5abd.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api-service.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link as BasicLink } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const MovieListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const Link = styled(BasicLink)`\n  text-decoration: none;\n  color: #333;\n  transition: color 0.3s ease-in-out;\n\n  :hover,\n  :focus {\n    color: #ff0000;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieList, Link, MovieListItem } from './MovieGallery.styled';\n\nconst MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title, name }) => (\n        <MovieListItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </Link>\n        </MovieListItem>\n      ))}\n    </MovieList>\n  );\n};\n\nexport default MovieGallery;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  max-width: 400px;\n  margin: 0 auto 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 16px;\n\n  :focus {\n    outline: none;\n    border-color: #ff0000;\n    box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);\n  }\n`;\n\nexport const FormBtn = styled.button`\n  padding: 10px 20px;\n  background-color: #ff0000;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  :hover {\n    background-color: #990000;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Input, FormBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ handleSearch }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (value.trim() === '') {\n      // toast.warning('Please write what you are looking for.');\n      return;\n    }\n\n    handleSearch(value);\n\n    setValue('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n          value={value}\n        />\n        <FormBtn type=\"submite\">Search</FormBtn>\n      </Form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm';\nimport APIService from 'services/api-service';\nimport MovieGallery from 'components/MovieGallery';\n\nconst apiService = new APIService();\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n\n  const query = searchParams.get('query') ?? '';\n  console.log(query);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getMovies(query);\n    // eslint-disable-next-line\n  }, [query, searchParams, page]);\n\n  const updateQueryString = value => {\n    if (value === query) {\n      return;\n    }\n\n    setPage(1);\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  async function getMovies() {\n    if (page === 1) {\n      // onLoadMore(false);\n      setMovies([]);\n    }\n\n    try {\n      const response = await apiService.searchMovieByQuery(query, page);\n      console.log(response);\n      // setMovies(movies => [...movies, ...response]);\n      setMovies(response);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <SearchForm value={query} handleSearch={updateQueryString} />\n      <MovieGallery movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport default class APIService {\n  constructor() {\n    this.key = 'f174cbacdc3a2b94891babbfd6b17080';\n    this.baseURL = 'https://api.themoviedb.org/3/';\n  }\n\n  async getTrends() {\n    const response = await axios.get(\n      `${this.baseURL}trending/all/day?api_key=${this.key}`\n    );\n\n    return response.data.results;\n  }\n\n  async searchMovieByQuery(query, page) {\n    const response = await axios.get(\n      `${this.baseURL}search/movie?api_key=${this.key}&query=${query}&page=${page}`\n    );\n\n    return response.data.results;\n  }\n\n  async getMovieDetails(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieCast(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/credits?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n\n  async getMovieReviews(id) {\n    const response = await axios.get(\n      `${this.baseURL}movie/${id}/reviews?api_key=${this.key}`\n    );\n\n    return response.data;\n  }\n}\n"],"names":["MovieList","styled","MovieListItem","Link","BasicLink","movies","location","useLocation","console","log","map","id","title","name","to","state","from","Form","Input","FormBtn","handleSearch","useState","value","setValue","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","onChange","target","apiService","APIService","useSearchParams","searchParams","setSearchParams","page","setPage","setMovies","query","get","useEffect","getMovies","searchMovieByQuery","response","MovieGallery","this","key","baseURL","axios","data","results"],"sourceRoot":""}